{"version":3,"sources":["Player.tsx","Dealer.tsx","buttons/hit-button/hit-button.tsx","buttons/stay-button/stay-button.tsx","buttons/ace-button/ace-button.tsx","player-score/player-score.tsx","player-bank/player-bank.tsx","hand/hand.tsx","ranks.tsx","handTotal.tsx","panels/player/player-panel.tsx","panels/dealer/dealer-panel.tsx","suits.tsx","card/card.tsx","card-deck/card-deck.tsx","playing-table/playing-table.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Player","_hand","_score","_bank","_hasAce","_hasStayed","this","hand","score","bank","hasAce","hasStayed","Dealer","HitButton","props","id","player","onClick","hitBtnClick","disabled","stayedStatus","StayButton","stayBtnClick","AceButton","aceBtnClick","aceStatus","PlayerScore","className","PlayerBank","Hand","cards","Ranks","A","2","3","4","5","6","7","8","9","10","J","Q","K","handTotal","total","i","length","card","rank","PlayerPanel","deck","playerHand","data","useState","setHand","setScore","stays","setGameStatus","dealrScore","playerScoreArea","document","querySelector","playerScore","parseInt","innerText","event","shift","cardValue","push","stayBtnId","stayButton","hitBtnId","hitButton","hitButtons","querySelectorAll","aceBtnId","aceButton","numHitButtons","hasAttribute","firstCard","hiddenCards","dealerScoreArea","dealerScore","playerScores","style","visibility","dlrScore","DealerPanel","Suits","Clubs","Diamonds","Hearts","Spades","Card","cardClass","suit","join","CardDeck","numberDecks","suits","Object","values","ranks","keys","Table","dealer","players","App","dealerPanel","playerPanels","arrayIndex","generateRandomNumberArray","arrayLength","maxNumber","numberArray","randomNumber","Math","floor","random","generateRandomNumber","cardDeck","deckLength","shuffledArray","shuffledDeck","shuffleDeck","createPlayers","index","numPlayers","j","currentCard","newCard","dealCards","createPlayerPanels","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9d91dc21.chunk.js","sourcesContent":["class Player {\r\n    private _hand: any;\r\n    private _score: number;\r\n    private _bank: number;\r\n    private _hasAce: boolean;\r\n    private _hasStayed: boolean;\r\n  \r\n    constructor() {\r\n      this._hand = [];\r\n      this._score = 0;\r\n      this._bank = 500;\r\n      this._hasAce = false;\r\n      this._hasStayed = false;\r\n    }\r\n  \r\n    get hand(): any {\r\n      return this._hand;\r\n    }\r\n  \r\n    set hand(hand: any) {\r\n      this._hand = hand;\r\n    }\r\n  \r\n    get score(): number {\r\n      return this._score;\r\n    }\r\n  \r\n    set score(score: number) {\r\n      this._score = score;\r\n    }\r\n  \r\n    get bank(): number {\r\n      return this._bank;\r\n    }\r\n  \r\n    set bank(bank: number) {\r\n      this._bank = bank;\r\n    }\r\n  \r\n    get hasAce(): boolean {\r\n        return this._hasAce;\r\n    }\r\n\r\n    set hasAce(hasAce: boolean) {\r\n        this._hasAce = hasAce;\r\n    }\r\n  \r\n    get hasStayed(): boolean {\r\n        return this._hasStayed;\r\n    }\r\n\r\n    set hasStayed(hasStayed: boolean) {\r\n        this._hasStayed = hasStayed;\r\n    }\r\n}\r\n\r\nexport default Player;  ","class Dealer {\r\n    private _hand: any;\r\n    private _score: number;\r\n    private _hasAce: boolean;\r\n\r\n    constructor(){\r\n        this._hand = [];\r\n        this._score = 0;\r\n        this._hasAce = false;\r\n    }\r\n  \r\n    get hand(): any {\r\n        return this._hand;\r\n    }\r\n    \r\n    set hand(hand: any) {\r\n        this._hand = hand;\r\n    }\r\n\r\n    get score(): number {\r\n        return this._score;\r\n    }\r\n\r\n    set score(score: number) {\r\n        this._score = score;\r\n    }\r\n   \r\n    get hasAce(): boolean {\r\n        return this._hasAce;\r\n    }\r\n\r\n    set hasAce(hasAce: boolean) {\r\n        this._hasAce = hasAce;\r\n    }\r\n}\r\n\r\nexport default Dealer;","import React from 'react';\r\nimport './hit-button.scss';\r\n\r\nconst HitButton = ( props: any ): any => {\r\n    return (\r\n      <div>\r\n        <button id={ 'hitBtn' + props.player } onClick={ props.hitBtnClick } disabled={ props.stayedStatus }>\r\n          hit\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n  \r\nexport default HitButton; ","import React from 'react';\r\nimport './stay-button.scss';\r\n\r\nconst StayButton = ( props: any ): any => {\r\n    return (\r\n      <div>\r\n        <button id={ 'stayBtn' + props.player } onClick={ props.stayBtnClick }>\r\n          stay\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default StayButton;","import React from 'react';\r\nimport './ace-button.scss';\r\n\r\nconst AceButton = ( props: any ): any => {  \r\n    return (\r\n      <div>\r\n        <button id={ 'aceBtn' + props.player } onClick={ props.aceBtnClick } disabled={ !props.aceStatus }>\r\n          Make Ace 11\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default AceButton;","import React from 'react';\r\nimport './player-score.scss';\r\n\r\nconst PlayerScore = ( props:any ): any => {\r\n    return (\r\n        <div id={ 'score' + props.player } className=\"score\">\r\n          <span>\r\n            score: \r\n          </span>\r\n          <span>\r\n            { props.score }\r\n          </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayerScore;","import React from 'react';\r\n\r\nconst PlayerBank = ( props:any ): any => {\r\n    return (\r\n        <div id={ 'bank' + props.player } className=\"bank\">\r\n          <div>\r\n            bank: \r\n          </div>\r\n          <div>\r\n            $ { props.bank }\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayerBank;","import React from 'react';\r\nimport './hand.scss';\r\n\r\nconst Hand = ( props: any ): any => {\r\n    return (\r\n      <div id={ 'hand' + props.player } className=\"cards\">\r\n        { props.cards }\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Hand;","const Ranks: any = {\r\n    A : 1,\r\n    2 : 2,\r\n    3 : 3,\r\n    4 : 4,\r\n    5 : 5,\r\n    6 : 6,\r\n    7 : 7,\r\n    8 : 8,\r\n    9 : 9,\r\n    10 : 10,\r\n    J : 10,\r\n    Q : 10,\r\n    K : 10\r\n}\r\n\r\nexport default Ranks;","import Ranks from './ranks';\r\n\r\nconst handTotal = ( cards: any ): number => {\r\n    let total: number = 0;\r\n  \r\n    for( let i = 0; i < cards.length; i++ ) {\r\n      let card: any = cards[ i ].props.rank;\r\n      total += Ranks[ card ];\r\n    }\r\n  \r\n    return total;\r\n}\r\n  \r\nexport default handTotal;","import React, { useState } from 'react';\r\nimport HitButton from '../../buttons/hit-button/hit-button';\r\nimport StayButton from '../../buttons/stay-button/stay-button';\r\nimport AceButton from '../../buttons/ace-button/ace-button';\r\nimport PlayerScore from '../../player-score/player-score';\r\nimport PlayerBank from '../../player-bank/player-bank';\r\nimport Hand from '../../hand/hand';\r\nimport handTotal from '../../handTotal';\r\nimport './player-panel.scss';\r\n\r\nconst PlayerPanel = ( props: any ): any => {\r\n  const deck: any = props.deck;\r\n  const playerHand: any = props.data.hand;\r\n  const [hand, setHand] = useState( playerHand );\r\n  const [score, setScore] = useState( handTotal( hand ) );\r\n  let stays: number = 0;\r\n\r\n  const handleAceBtnClick = ( event: any ): void => {\r\n    const aceBtnId: string = '#aceBtn' + props.player;\r\n    const aceButton: any = document.querySelector( aceBtnId );\r\n\r\n    setScore( score + 10 );\r\n    aceButton.disabled = true;\r\n  }\r\n\r\n  const handleHitBtnClick = ( event: any ): any => {\r\n    const card: any = deck.shift();\r\n    const cardValue: number = handTotal( [card] );\r\n    playerHand.push( card );\r\n    setHand( playerHand );\r\n    setScore( score + cardValue );\r\n  }\r\n\r\n  const setGameStatus = ( player: number, dealrScore: number ): void => {\r\n    const playerScoreArea: any = document.querySelector( '#score' + player + ' span:nth-child(2)' );\r\n    const playerScore: number = parseInt( playerScoreArea.innerText );\r\n    const playerGameStatus: any = document.querySelector( '#player' + player + 'GameStatus' );\r\n\r\n    playerGameStatus.innerText = ( ( playerScore <= 21 && playerScore > dealrScore ) || dealrScore > 21 ) ? 'You won!' : 'You lost!';\r\n  }\r\n\r\n  const handleStayBtnClick = (event: any): void => {\r\n    const stayBtnId: string = '#stayBtn' + props.player;\r\n    const stayButton: any = document.querySelector( stayBtnId );\r\n    const hitBtnId: string = '#hitBtn' + props.player;\r\n    const hitButton: any = document.querySelector( hitBtnId );\r\n    const hitButtons: any = document.querySelectorAll( \"button[id^='hitBtn']\" );\r\n    const aceBtnId: string = '#aceBtn' + props.player;\r\n    const aceButton: any = document.querySelector( aceBtnId );\r\n\r\n    hitButton.disabled = true;\r\n    aceButton.disabled = true;\r\n    stayButton.disabled = true;\r\n\r\n    let numHitButtons: number = hitButtons.length;\r\n    for (let i = 0; i < numHitButtons; i++) {\r\n      if ( hitButtons[i].hasAttribute('disabled') )\r\n        stays++;\r\n    }\r\n\r\n    if (stays === numHitButtons) {\r\n      const firstCard: any = document.querySelector('.dealerRow #handDealer div:first-child .left-corner');\r\n      const hiddenCards: any = document.querySelectorAll('.dealerRow #handDealer div.card:nth-child(n+2)');\r\n      const dealerScoreArea: any = document.querySelector('#scoreDealer');\r\n      const dealerScore: any = document.querySelector('#dealerSection .score span:nth-child(2)');\r\n      const playerScores: any = document.querySelectorAll( '#playerSection div[id^=score] span:nth-child(2)' );\r\n      firstCard.style.visibility = 'visible';\r\n      for( let i = 0; i < hiddenCards.length; i++ ) {\r\n        hiddenCards[i].style.visibility = 'visible';\r\n      }     \r\n      dealerScoreArea.style.visibility = 'visible';\r\n      const dlrScore: number = parseInt( dealerScore.innerText );\r\n      for( let i = 0; i < playerScores.length; i++ ) {\r\n        setGameStatus( i, dlrScore );\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id={ 'player' + props.player } className=\"playerArea\">\r\n      <div id={ 'player' + props.player + 'Buttons' } className=\"buttons\">\r\n        <HitButton player={ props.player } hitBtnClick={ handleHitBtnClick } />\r\n        <StayButton player={ props.player } stayBtnClick={ handleStayBtnClick } />\r\n      </div>\r\n      <br />\r\n      <div id={ 'player' + props.player + 'AceButton' } className=\"buttons\">\r\n        <AceButton player={ props.player } aceBtnClick={ handleAceBtnClick } aceStatus={ props.data.hasAce } />\r\n      </div>\r\n      <div id={ 'player' + props.player + 'GameStatus' } className=\"gameStatus\"></div>\r\n      <div id={ 'player' + props.player + 'Cards'} className=\"cardArea\">\r\n        <PlayerScore player={ props.player } score={ score } />\r\n        <Hand player={ props.player } cards={ props.data.hand } />\r\n      </div>\r\n      <div id={ 'player' + props.player + 'Bank' } className=\"bankArea\">\r\n        <PlayerBank player={ props.player } bank={ props.data.bank } />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlayerPanel;","import React from 'react';\r\nimport PlayerScore from '../../player-score/player-score';\r\nimport Hand from '../../hand/hand';\r\nimport handTotal from '../../handTotal';\r\n\r\nconst DealerPanel = ( props: any ): any => {\r\n  const hand: any = props.data.hand;\r\n  let score: number = handTotal( hand );\r\n\r\n  if( props.data.hand[0].props.rank === 'A' || props.data.hand[1].props.rank === 'A' ) score += 10;\r\n\r\n  return (\r\n      <div className=\"dealerRow\">\r\n        <div className=\"dealerArea\">\r\n          <div><PlayerScore player=\"Dealer\" score={ score } /></div>\r\n          <Hand player=\"Dealer\" cards={ hand } />\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default DealerPanel;","const Suits: any = {\r\n    Clubs : '\\u2663',\r\n    Diamonds : '\\u2666',\r\n    Hearts : '\\u2665',\r\n    Spades : '\\u2660'\r\n}\r\n\r\nexport default Suits;  ","import React from 'react';\r\nimport Suits from '../suits';\r\nimport './card.scss';\r\n\r\nconst Card = ( props: any ): any => {  \r\n    let cardClass: any = [ 'card' ];\r\n    cardClass.push( ( props.suit === Suits[ 'Diamonds' ] || props.suit === Suits[ 'Hearts' ] ) ? 'red' : 'black' );\r\n    cardClass = cardClass.join( ' ' );\r\n  \r\n    return (\r\n      <div className={ cardClass }>\r\n        <div className=\"left-corner\">\r\n          <div>{ props.rank }</div>\r\n          <div>{ props.suit }</div>\r\n        </div>\r\n        <div className=\"right-corner\">\r\n          <div className=\"invert\">{ props.suit }</div>\r\n          <div className=\"invert\">{ props.rank }</div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Suits from '../suits';\r\nimport Ranks from '../ranks';\r\nimport Card from '../card/card';\r\n\r\nconst deck: any = [];\r\n\r\nconst CardDeck = ( numberDecks: number ): any => {\r\n    const suits: any = Object.values( Suits );\r\n    const ranks: any = Object.keys( Ranks );\r\n  \r\n    for( let i = 0; i < numberDecks; i++ ) {\r\n      for( let suit of suits ) {\r\n        for( let rank of ranks ){\r\n          deck.push( <Card suit={ suit } rank={ rank } /> )\r\n        }\r\n      }\r\n    }\r\n  \r\n    return deck\r\n}\r\n  \r\nexport default CardDeck; ","import React from 'react';\r\nimport './playing-table.scss'\r\n\r\nconst Table = ( props: any ): any => {\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"dealerSection\" className=\"bj-table\">\r\n        { props.dealer }\r\n      </div>\r\n      <div id=\"playerSection\" className=\"playersRow\">\r\n        { props.players }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n  \r\nexport default Table;","import React from 'react';\nimport Player from './Player';\nimport Dealer from './Dealer';\nimport PlayerPanel from './panels/player/player-panel';\nimport DealerPanel from './panels/dealer/dealer-panel'\nimport cardDeck from './card-deck/card-deck';\nimport Table from './playing-table/playing-table';\nimport handTotal from './handTotal';\n\nconst App = () => {\n  const dealer: Dealer = new Dealer();\n  const players: Player[] = [];\n  const numPlayers: number = 5;\n  const numberDecks: number = 8;\n  const dealerMinimum: number = 17;\n  const dealerPanel: any = [];\n  const playerPanels: any = [];\n\n  let arrayIndex: number = 0;\n  var index: number = 0;\n    \n  const generateRandomNumber = ( maxNumber: number ): number => {\n      return Math.floor( Math.random() * maxNumber );\n  }\n  \n  const generateRandomNumberArray = ( arrayLength: number, maxNumber: number, numberArray: number[] ): number[] => {\n    if( arrayIndex < arrayLength ) {\n      let randomNumber: number = generateRandomNumber(maxNumber);\n      numberArray.push(randomNumber);\n      arrayIndex++;\n  \n      return generateRandomNumberArray(arrayLength, maxNumber, numberArray);\n    } else {\n      arrayIndex = 0;\n      return numberArray;\n    }\n  }\n  \n  const shuffleDeck = ( cardDeck: any ): any => {\n    const deckLength: number = cardDeck.length;\n    let shuffledArray: number[] = [];\n    const shuffledDeck: any = [];    \n  \n    generateRandomNumberArray(deckLength, deckLength, shuffledArray);\n  \n    for ( let i = 0; i < deckLength; i++) {\n      shuffledDeck.push( cardDeck[shuffledArray[ i ]] );\n    }\n  \n    return shuffledDeck;\n  }\n\n  const createPlayerPanels = (): void => {\n    dealerPanel.push( <DealerPanel data={ dealer } deck={ deck } /> );\n    for(let i = 0; i < numPlayers; i++){\n      playerPanels.push( <PlayerPanel player={ i } data={ players[i] } deck={ deck } />);\n    }\n  }\n\n  const createPlayers = (): void => {\n    for( let i = 0; i < numPlayers; i++ ) {\n      let player: Player = new Player();\n      players.push( player );\n    }\n  }\n\n  const dealCards = ( players: any, dealer: any, deck: any, index: number ): void => {\n    const numPlayers: number = players.length;\n\n    for( let i = 0; i < 2; i++ ) {\n        for( let j = 0; j < numPlayers; j++ ) {\n          var currentCard = deck.shift();\n          if( currentCard.props.rank === 'A' ) players[j].hasAce = true;\n          players[j].hand.push( currentCard );\n        }\n        currentCard = deck.shift();\n        if( currentCard.props.rank === 'A' ) dealer.hasAce = true;\n        dealer.hand.push( currentCard );\n    }\n    let dealerScore = handTotal( dealer.hand );\n    if ( dealer.hasAce ) dealerScore += 10;\n    while ( dealerScore < dealerMinimum ) {\n      const newCard = deck.shift();\n      dealer.hand.push( newCard );\n      dealerScore += handTotal( [ newCard ] );\n    }\n  }\n\n  let deck: any = cardDeck( numberDecks );\n  deck = shuffleDeck( deck );\n\n  const startGame = () => {\n    createPlayers();\n    dealCards( players, dealer, deck, index );\n    createPlayerPanels();\n  }\n\n  startGame();\n\n  return (\n    <div className=\"game\">\n      <Table dealer={ dealerPanel } players={ playerPanels } />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}