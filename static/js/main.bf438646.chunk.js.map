{"version":3,"sources":["suits.tsx","ranks.tsx","card/card.tsx","card-deck/card-deck.tsx","player-score/player-score.tsx","buttons/hit-button/hit-button.tsx","buttons/stay-button/stay-button.tsx","buttons/ace-button/ace-button.tsx","hand/hand.tsx","buttons/new-game-button/new-game-button.tsx","handTotal.tsx","hasAce.tsx","playing-table/playing-table.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Suits","Clubs","Diamonds","Hearts","Spades","Ranks","A","2","3","4","5","6","7","8","9","10","J","Q","K","Card","props","cardClass","push","suit","join","className","rank","deck","CardDeck","numberDecks","suits","Object","values","ranks","keys","i","PlayerScore","id","player","score","HitButton","onClick","hitBtnClick","disabled","stayedStatus","StayButton","stayBtnClick","AceButton","aceBtnClick","aceStatus","Hand","cards","NewGameButton","newGameBtnClick","handTotal","total","length","card","hasAce","hand","Table","playerControls","useState","stays","setStays","dealerHand","dealerCards","playerHands","playersCards","hands","setHands","incrementStays","gameOver","processGameOver","firstCard","document","querySelector","hiddenCards","querySelectorAll","dealerScoreArea","dealerScore","playerScores","style","visibility","dlrScore","parseInt","innerText","setGameStatus","handleHitBtnClick","event","hitButtonId","target","playerId","split","stayButton","hitButton","aceButton","shift","playerHand","dealrScore","playerScoreArea","playerScore","playerGameStatus","handleStayBtnClick","stayBtnId","idNumber","hitBtnId","handleAceBtnClick","aceBtnId","console","log","controls","createPlayerControls","stayButtons","hitButtons","aceButtons","playerCards","j","dealCards","forEach","button","dealrHand","playrHands","arrayIndex","generateRandomNumberArray","arrayLength","maxNumber","numberArray","randomNumber","Math","floor","random","generateRandomNumber","cardDeck","deckLength","shuffledArray","shuffledDeck","shuffleDeck","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf438646.chunk.js","sourcesContent":["const Suits: any = {\r\n    Clubs : '\\u2663',\r\n    Diamonds : '\\u2666',\r\n    Hearts : '\\u2665',\r\n    Spades : '\\u2660'\r\n}\r\n\r\nexport default Suits;  ","const Ranks: any = {\r\n    A : 1,\r\n    2 : 2,\r\n    3 : 3,\r\n    4 : 4,\r\n    5 : 5,\r\n    6 : 6,\r\n    7 : 7,\r\n    8 : 8,\r\n    9 : 9,\r\n    10 : 10,\r\n    J : 10,\r\n    Q : 10,\r\n    K : 10\r\n}\r\n\r\nexport default Ranks;","import React from 'react';\r\nimport Suits from '../suits';\r\nimport './card.scss';\r\n\r\nconst Card = ( props: any ): any => {  \r\n    let cardClass: any = [ 'card' ];\r\n    cardClass.push( ( props.suit === Suits[ 'Diamonds' ] || props.suit === Suits[ 'Hearts' ] ) ? 'red' : 'black' );\r\n    cardClass = cardClass.join( ' ' );\r\n  \r\n    return (\r\n      <div className={ cardClass }>\r\n        <div className=\"left-corner\">\r\n          <div>{ props.rank }</div>\r\n          <div>{ props.suit }</div>\r\n        </div>\r\n        <div className=\"right-corner\">\r\n          <div className=\"invert\">{ props.suit }</div>\r\n          <div className=\"invert\">{ props.rank }</div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Suits from '../suits';\r\nimport Ranks from '../ranks';\r\nimport Card from '../card/card';\r\n\r\nconst deck: any = [];\r\n\r\nconst CardDeck = ( numberDecks: number ): any => {\r\n    const suits: any = Object.values( Suits );\r\n    const ranks: any = Object.keys( Ranks );\r\n  \r\n    for( let i = 0; i < numberDecks; i++ ) {\r\n      for( let suit of suits ) {\r\n        for( let rank of ranks ){\r\n          deck.push( <Card suit={ suit } rank={ rank } /> )\r\n        }\r\n      }\r\n    }\r\n  \r\n    return deck\r\n}\r\n  \r\nexport default CardDeck; ","import React from 'react';\r\nimport './player-score.scss';\r\n\r\nconst PlayerScore = ( props:any ): any => {\r\n    return (\r\n        <div id={ 'score' + props.player } className=\"score\">\r\n          <span>\r\n            score: \r\n          </span>\r\n          <span>\r\n            { props.score }\r\n          </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayerScore;","import React from 'react';\r\nimport './hit-button.scss';\r\n\r\nconst HitButton = ( props: any ): any => {\r\n    return (\r\n      <div>\r\n        <button id={ 'hitBtn' + props.player } onClick={ props.hitBtnClick } disabled={ props.stayedStatus }>\r\n          hit\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n  \r\nexport default HitButton; ","import React from 'react';\r\nimport './stay-button.scss';\r\n\r\nconst StayButton = ( props: any ): any => {\r\n    return (\r\n      <div>\r\n        <button id={ 'stayBtn' + props.player } onClick={ props.stayBtnClick }>\r\n          stay\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default StayButton;","import React from 'react';\r\nimport './ace-button.scss';\r\n\r\nconst AceButton = ( props: any ): any => {  \r\n    return (\r\n      <div>\r\n        <button id={ 'aceBtn' + props.player } onClick={ props.aceBtnClick } disabled={ props.aceStatus }>\r\n          Make Ace 11\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default AceButton;","import React from 'react';\r\nimport './hand.scss';\r\n\r\nconst Hand = ( props: any ): any => {\r\n    return (\r\n      <div id={ 'hand' + props.player } className=\"cards\">\r\n        { props.cards }\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Hand;","import React from 'react';\r\nimport './new-game-button.scss';\r\n\r\nconst NewGameButton = ( props: any ): any => {\r\n    return (\r\n        <div className='buttons'>\r\n          <button id='newGameBtn' onClick={ props.newGameBtnClick }>\r\n            New Game\r\n          </button>\r\n        </div>\r\n      )\r\n  }\r\n\r\n  export default NewGameButton;","import Ranks from './ranks';\r\n\r\nconst handTotal = ( cards: any ): number => {\r\n    let total: number = 0;\r\n  \r\n    for( let i = 0; i < cards.length; i++ ) {\r\n      let card: any = cards[i].props.rank;\r\n      total += Ranks[card];\r\n    }\r\n  \r\n    return total;\r\n}\r\n  \r\nexport default handTotal;","const hasAce = ( hand: any ) => {\r\n    return hand[0].props.rank === 'A' || hand[1].props.rank === 'A'\r\n}\r\n\r\nexport default hasAce;","import React, { useState } from 'react';\r\nimport PlayerScore from '../player-score/player-score';\r\nimport HitButton from '../buttons/hit-button/hit-button';\r\nimport StayButton from '../buttons/stay-button/stay-button';\r\nimport AceButton from '../buttons/ace-button/ace-button';\r\nimport Hand from '../hand/hand';\r\nimport NewGameButton from '../buttons/new-game-button/new-game-button';\r\nimport handTotal from '../handTotal';\r\nimport hasAce from '../hasAce';\r\nimport './playing-table.scss';\r\n\r\nconst Table = ( props: any ): any => {\r\n  const deck: any = props.deck;\r\n  const dealerMinimum: number = 17;\r\n  const bestScore: number = 21;\r\n\r\n  let playerControls: any;\r\n  \r\n  const [stays, setStays] = useState( 1 );\r\n  const [hands, setHands] = useState({\r\n    dealerHand: props.dealerCards,\r\n    playerHands: props.playersCards\r\n  });\r\n\r\n  const incrementStays = (): void => {\r\n    setStays( stays + 1 );\r\n  }\r\n\r\n  const resetStays = (): void => {\r\n    setStays( 1 );\r\n  }\r\n\r\n  const gameOver = (): boolean => {\r\n    return stays === playerHands.length;\r\n  }\r\n\r\n  const processGameOver = () => {\r\n    const firstCard: any = document.querySelector('.dealerRow #handDealer div:first-child .left-corner');\r\n    const hiddenCards: any = document.querySelectorAll('.dealerRow #handDealer div.card:nth-child(n+2)');\r\n    const dealerScoreArea: any = document.querySelector('#scoreDealer');\r\n    const dealerScore: any = document.querySelector('#dealerSection .score span:nth-child(2)');\r\n    const playerScores: any = document.querySelectorAll( '.playersRow div[id^=score] span:nth-child(2)' );\r\n\r\n    firstCard.style.visibility = 'visible';\r\n\r\n    for( let i = 0; i < hiddenCards.length; i++ ) {\r\n      hiddenCards[i].style.visibility = 'visible';\r\n    }     \r\n\r\n    dealerScoreArea.style.visibility = 'visible';\r\n\r\n    const dlrScore: number = parseInt( dealerScore.innerText );\r\n    for( let i = 0; i < playerScores.length; i++ ) {\r\n      setGameStatus( i, dlrScore );\r\n    }\r\n  }\r\n\r\n  const handleHitBtnClick = ( event: any ): any => {\r\n    const hitButtonId: string = event.target.id;\r\n    const playerId: number = parseInt( hitButtonId.split('')[hitButtonId.length - 1] );\r\n    const stayButton: any = document.querySelector( '#stayBtn' + playerId );\r\n    const hitButton: any = document.querySelector( '#hitBtn' + playerId );\r\n    const dealerScore: any = document.querySelector('#dealerSection .score span:nth-child(2)');\r\n    const dlrScore: number = parseInt( dealerScore.innerText );\r\n    const aceButton: any = document.querySelector( '#aceBtn' + playerId );\r\n  \r\n    const card: any = deck.shift();\r\n    let playersCards: any = playerHands;\r\n    let playerHand: any = playerHands[playerId];\r\n\r\n    playerHand = [...playerHand, card];\r\n    let playerScore: number = handTotal( playerHand );\r\n    if( playerScore > bestScore ) {\r\n      incrementStays();\r\n      stayButton.disabled = true;\r\n      hitButton.disabled = true;\r\n\r\n      setGameStatus( playerId, dlrScore );\r\n\r\n      if ( gameOver() ) processGameOver();\r\n    }\r\n\r\n    playersCards[playerId] = playerHand;\r\n\r\n    setHands({\r\n      dealerHand: dealerHand,\r\n      playerHands: playersCards\r\n    });\r\n\r\n    aceButton.disabled = true;\r\n  }\r\n\r\n  const setGameStatus = ( player: number, dealrScore: number ): void => {\r\n    const playerScoreArea: any = document.querySelector( '#score' + player + ' span:nth-child(2)' );\r\n    const playerScore: number = parseInt( playerScoreArea.innerText );\r\n    const playerGameStatus: any = document.querySelector( '#player' + player + 'GameStatus' );\r\n\r\n    if( playerGameStatus.innerText === ''){\r\n      if( playerScore <= bestScore && ( dealrScore > bestScore || playerScore > dealrScore ) ) playerGameStatus.innerText = \"You win!\";\r\n      if( playerScore > bestScore ) playerGameStatus.innerText = \"You lose!\";\r\n      if( playerScore <= bestScore && dealrScore <= bestScore && playerScore < dealrScore ) playerGameStatus.innerText = \"You lose!\";\r\n      if( ( playerScore <= bestScore && dealrScore <= bestScore ) && playerScore === dealrScore ) playerGameStatus.innerText = \"You tie!\";\r\n    }\r\n  }\r\n\r\n  const handleStayBtnClick = ( event: any ): void => {\r\n    const stayBtnId: string = event.target.id;\r\n    const idNumber: number = parseInt( stayBtnId.split('')[stayBtnId.length - 1] );\r\n    const stayButton: any = document.querySelector( '#' + stayBtnId );\r\n    const hitBtnId: string = \"hitBtn\" + idNumber;\r\n    const hitButton: any = document.querySelector( '#' + hitBtnId );\r\n\r\n    hitButton.disabled = true;\r\n    stayButton.disabled = true;\r\n\r\n    incrementStays();\r\n\r\n    if ( gameOver() ) processGameOver();\r\n  }\r\n\r\n  const handleAceBtnClick = ( event: any ): void => {\r\n    const aceBtnId: string = event.target.id;\r\n    const playerId: number = parseInt( aceBtnId.split('')[aceBtnId.length - 1]);\r\n    const aceButton: any = document.querySelector( '#aceBtn' + playerId );\r\n    const playerScore: any = document.querySelector( '#player' + playerId + ' div[id=score' + playerId + '] span:nth-child(2)' );\r\n    console.log(aceBtnId);\r\n\r\n    let score: number = parseInt( playerScore.innerText ) + 10;\r\n    playerScore.innerText = score;\r\n  \r\n    aceButton.disabled = true;\r\n  }\r\n\r\n  const createPlayerControls = (): any => {\r\n    const controls: any = [];\r\n\r\n    for( let i = 0; i < playerHands.length; i++ ) {\r\n      controls.push(\r\n        <div id={ 'player' + i } className=\"playerArea\">\r\n          <div id={ 'player' + i + 'Buttons' } className=\"buttons\">\r\n            <HitButton player={ i } hitBtnClick={ handleHitBtnClick } />\r\n            <StayButton player={ i } stayBtnClick={ handleStayBtnClick } />\r\n            <AceButton player={ i } aceBtnClick={ handleAceBtnClick } aceStatus={ !hasAce( playerHands[i] ) } />\r\n          </div>\r\n          <div id={ 'player' + i + 'GameStatus' } className=\"gameStatus\"></div>\r\n          <div id={ 'player' + i + 'Cards'} className=\"cardArea\">\r\n            <PlayerScore player={ i } score={ handTotal( playerHands[i] ) } />\r\n            <Hand player={ i } cards={ playerHands[i] } />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return controls;\r\n  }\r\n\r\n  const dealCards = (): void => {  \r\n    let dealerCards: any = [];\r\n    let playerCards: any = [];\r\n\r\n    for( let i = 0; i < playerHands.length; i++ ) {\r\n      playerCards.push( [] );\r\n    }\r\n\r\n    for( let i = 0; i < 2; i++ ) {\r\n        for( let j = 0; j < playerHands.length; j++ ) {\r\n          playerCards[j] = [...playerCards[j], deck.shift() ];\r\n        }\r\n        dealerCards = [...dealerCards, deck.shift()];\r\n    }\r\n  \r\n    let dealerScore: number = hasAce( dealerCards ) ? handTotal( dealerCards ) + 10 : handTotal( dealerCards );\r\n    while( dealerScore < dealerMinimum ) {\r\n      dealerCards = [...dealerCards, deck.shift()];\r\n\r\n      dealerScore = hasAce( dealerCards ) ? handTotal( dealerCards ) + 10 : handTotal( dealerCards );\r\n    }\r\n\r\n    setHands({\r\n      dealerHand: dealerCards,\r\n      playerHands: playerCards\r\n    });\r\n  }\r\n\r\n  const resetGameStatus = ( player: number ): void => {\r\n    const playerGameStatus: any = document.querySelector( '#player' + player + 'GameStatus' );\r\n  \r\n    playerGameStatus.innerText = '';\r\n  }\r\n    \r\n  const handleNewGameClick = ( ) => {\r\n    const firstCard: any = document.querySelector('.dealerRow #handDealer div:first-child .left-corner');\r\n    const hiddenCards: any = document.querySelectorAll('.dealerRow #handDealer div.card:nth-child(n+3)');\r\n    const dealerScoreArea: any = document.querySelector('#scoreDealer');\r\n    const playerScores: any = document.querySelectorAll( '.playersRow div[id^=score] span:nth-child(2)' );\r\n    const stayButtons: any = document.querySelectorAll( \"button[id^='stayBtn']\" );\r\n    const hitButtons: any = document.querySelectorAll( \"button[id^='hitBtn']\" );\r\n    const aceButtons: any = document.querySelectorAll( \"button[id^='aceBtn']\" );\r\n\r\n    resetStays();\r\n    dealCards();\r\n\r\n    firstCard.style.visibility = 'hidden';\r\n\r\n    for( let i = 0; i < hiddenCards.length; i++ ) {\r\n      hiddenCards[i].style.visibility = 'hidden';\r\n    }     \r\n\r\n    dealerScoreArea.style.visibility = 'hidden';\r\n\r\n    stayButtons.forEach( ( button: any ) => button.disabled = false );\r\n    hitButtons.forEach( ( button: any ) => button.disabled = false );\r\n    aceButtons.forEach( ( button: any ) => button.disabled === true ? false : false );\r\n        \r\n    for( let i = 0; i < playerScores.length; i++ ) {\r\n      resetGameStatus( i );\r\n    }\r\n  }\r\n  \r\n  const { dealerHand, playerHands } = hands;\r\n  playerControls = createPlayerControls();\r\n\r\n  return (\r\n    <div className=\"bj-table\">\r\n      <div id=\"dealerSection\">\r\n        <div className=\"dealerRow\">\r\n          <div className=\"dealerArea\">\r\n            <PlayerScore player=\"Dealer\" score={ hasAce( dealerHand ) ? handTotal( dealerHand ) + 10 : handTotal( dealerHand ) } />\r\n            <Hand player=\"Dealer\" cards={ dealerHand } />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <NewGameButton newGameBtnClick={ handleNewGameClick } />\r\n      <div id=\"playersSection\">\r\n        <div className='playersRow'>\r\n          { playerControls }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n  \r\nexport default Table;","import React from 'react';\nimport cardDeck from './card-deck/card-deck';\nimport Table from './playing-table/playing-table';\nimport handTotal from './handTotal';\nimport hasAce from './hasAce';\nimport './App.css';\n\nconst numPlayers: number = 5;\nconst dealerMinimum: number = 17;\nlet dealrHand: any = [];\nlet playrHands: any = [];\nconst numberDecks: number = 8;\nlet arrayIndex: number = 0;\n\nconst generateRandomNumber = ( maxNumber: number ): number => {\n  return Math.floor( Math.random() * maxNumber );\n}\n\nconst generateRandomNumberArray = ( arrayLength: number, maxNumber: number, numberArray: number[] ): number[] => {\n  if( arrayIndex < arrayLength ) {\n    let randomNumber: number = generateRandomNumber(maxNumber);\n    numberArray.push(randomNumber);\n    arrayIndex++;\n\n    return generateRandomNumberArray(arrayLength, maxNumber, numberArray);\n  } else {\n    arrayIndex = 0;\n    return numberArray;\n  }\n}\n\nconst shuffleDeck = ( cardDeck: any ): any => {\nconst deckLength: number = cardDeck.length;\nlet shuffledArray: number[] = [];\nconst shuffledDeck: any = [];    \n\ngenerateRandomNumberArray(deckLength, deckLength, shuffledArray);\n\nfor ( let i = 0; i < deckLength; i++) {\n  shuffledDeck.push( cardDeck[shuffledArray[ i ]] );\n}\n\nreturn shuffledDeck;\n}\n\nlet deck: any = cardDeck( numberDecks );\ndeck = shuffleDeck( deck );\n\nconst dealCards = (): void => {\n  let dealerCards: any = [];\n  let playerHands: any = [];\n\n  for( let i = 0; i < numPlayers; i++ ) {\n    playerHands.push( [] );\n  }\n\n  for( let i = 0; i < 2; i++ ) {\n      for( let j = 0; j < numPlayers; j++ ) {\n        playerHands[j] = [...playerHands[j], deck.shift() ];\n      }\n      dealerCards = [...dealerCards, deck.shift()];\n  }\n\n  let dealerScore: number = hasAce( dealerCards ) ? handTotal( dealerCards ) + 10 : handTotal( dealerCards );\n  while( dealerScore < dealerMinimum ) {\n    dealerCards = [...dealerCards, deck.shift()];\n\n    dealerScore = hasAce( dealerCards ) ? handTotal( dealerCards ) + 10 : handTotal( dealerCards );\n  }\n\n  dealrHand = [...dealerCards];\n  playrHands = [...playerHands];  \n}\n\nconst startGame = () => {\n  dealCards();\n}\n\nstartGame();\n\nconst App = () => {\n\n  return (\n    <div className='game'>\n        <Table dealerCards={ dealrHand } playersCards={ playrHands } deck={ deck } />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}